name: Build

on:
    push:
        branches: [master]
    pull_request:
    release:
        types: [created]
    schedule:
        -   cron: '0 0 * * *'

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build
        strategy:
            fail-fast: false
            matrix:
                flavour: [debian, alpine]
                php: ['7.4', '8.0', '8.1']
        outputs:
            push: ${{ steps.version.outputs.push }}
        steps:
            -   uses: actions/checkout@master

            -   name: Determine the version
                id: version
                run: |
                    DOCKER_IMAGE=jakzal/phpqa
                    VERSION=master
                    LATEST_PHP_VERSION="8.1"
                    LATEST_FLAVOUR="debian"

                    # jakzal/phpqa:php8.1-debian, jakzal/phpqa:php8.1
                    TAGS="${DOCKER_IMAGE}:php${PHP_VERSION}-${IMAGE_FLAVOUR}"
                    if [[ $IMAGE_FLAVOUR == "$LATEST_FLAVOUR" ]]; then
                        TAGS="$TAGS,${DOCKER_IMAGE}:php${PHP_VERSION}"
                    fi

                    # jakzal/phpqa:alpine, jakzal/phpqa:debian, jakzal/phpqa:latest
                    if [[ $PHP_VERSION == "$LATEST_PHP_VERSION" ]]; then
                        TAGS="$TAGS,${DOCKER_IMAGE}:${IMAGE_FLAVOUR}"
                        if [[ $IMAGE_FLAVOUR == "$LATEST_FLAVOUR" ]]; then
                            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
                        fi
                    fi

                    # jakzal/phpqa:1.55.1, jakzal/phpqa:1.55
                    # jakzal/phpqa:1.55.1-php8.1, jakzal/phpqa:1.55-php8.1
                    # jakzal/phpqa:1.55.1-alpine, jakzal/phpqa:1.55-alpine
                    # jakzal/phpqa:1.55.1-php8.1-alpine, jakzal/phpqa:1.55-php8.1-alpine
                    if [[ $GITHUB_REF == refs/tags/* ]]; then
                        VERSION=${GITHUB_REF#refs/tags/v}
                        MINOR_VERSION=${VERSION%.*}
                        TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}-php${PHP_VERSION}-${IMAGE_FLAVOUR},${DOCKER_IMAGE}:${MINOR_VERSION}-php${PHP_VERSION}-${IMAGE_FLAVOUR}"
                        if [[ $IMAGE_FLAVOUR == "$LATEST_FLAVOUR" ]]; then
                            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}-php${PHP_VERSION},${DOCKER_IMAGE}:${MINOR_VERSION}-php${PHP_VERSION}"
                        fi
                        if [[ $PHP_VERSION == "$LATEST_PHP_VERSION" ]]; then
                            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}-${IMAGE_FLAVOUR},${DOCKER_IMAGE}:${MINOR_VERSION}-${IMAGE_FLAVOUR}"
                            if [[ $IMAGE_FLAVOUR == "$LATEST_FLAVOUR" ]]; then
                                TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${MINOR_VERSION}"
                            fi
                        fi
                    fi

                    echo "Version: $VERSION"
                    echo "Docker tags: $TAGS"
                    echo ::set-output name=version::${VERSION}
                    echo ::set-output name=tags::${TAGS}
                    echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
                    echo ::set-output name=date::$(date -u +'%Y-%m-%d')
                    echo ::set-output name=push::${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && github.repository_owner == 'jakzal' }}
                env:
                    PHP_VERSION: ${{ matrix.php }}
                    IMAGE_FLAVOUR: ${{ matrix.flavour }}

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v1

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            -   name: Login to DockerHub
                if: steps.version.outputs.push == 'true'
                uses: docker/login-action@v1
                with:
                    username: jakzal
                    password: ${{ secrets.DOCKER_HUB_TOKEN }}

            -   name: Cache Docker layers
                uses: actions/cache@v2
                with:
                    path: /tmp/.buildx-cache
                    key: ${{ runner.os }}-buildx-max-${{ matrix.php }}-${{ matrix.flavour }}-${{ hashFiles('**/Dockerfile', '**/entrypoint.sh') }}-${{ steps.version.outputs.date }}
                    restore-keys: |
                        ${{ runner.os }}-buildx-max-${{ matrix.php }}-${{ matrix.flavour }}-

            -   name: Build
                uses: docker/build-push-action@v2
                with:
                    context: ${{ matrix.flavour }}
                    load: true
                    platforms: linux/amd64
                    tags: ${{ steps.version.outputs.tags }}
                    build-args: |
                        PHP_VERSION=${{ matrix.php }}
                        INSTALLATION_DATE=${{ steps.version.outputs.date }}
                    labels: |
                        org.opencontainers.image.source=${{ github.event.repository.html_url }}
                        org.opencontainers.image.created=${{ steps.version.outputs.created }}
                        org.opencontainers.image.revision=${{ github.sha }}
                    cache-from: type=local,src=/tmp/.buildx-cache
                    cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

            -   name: Test
                run: |
                    echo "::group::Images"
                    docker images
                    echo "::endgroup::"

                    echo "::group::$BUILD_TAG"
                    docker inspect $BUILD_TAG
                    echo "::endgroup::"

                    echo "::group::PHP Version $PHP_VERSION"
                    docker run --rm --pull never $BUILD_TAG php -v | grep 'PHP '$PHP_VERSION
                    echo "::endgroup::"

                    echo "::group::Tests"
                    docker run --rm --pull never $BUILD_TAG php /tools/toolbox test
                    echo "::endgroup::"

                    echo "::group::Tools"
                    docker run --rm --pull never $BUILD_TAG
                    echo "::endgroup::"
                env:
                    PHP_VERSION: ${{ matrix.php }}
                    BUILD_TAG: jakzal/phpqa:php${{ matrix.php }}-${{ matrix.flavour }}

            -   name: Push
                uses: docker/build-push-action@v2
                if: steps.version.outputs.push == 'true'
                with:
                    context: ${{ matrix.flavour }}
                    push: ${{ steps.version.outputs.push }}
                    platforms: linux/amd64
                    tags: ${{ steps.version.outputs.tags }}
                    build-args: |
                        PHP_VERSION=${{ matrix.php }}
                        INSTALLATION_DATE=${{ steps.version.outputs.date }}
                    labels: |
                        org.opencontainers.image.source=${{ github.event.repository.html_url }}
                        org.opencontainers.image.created=${{ steps.version.outputs.created }}
                        org.opencontainers.image.revision=${{ github.sha }}
                    cache-from: type=local,src=/tmp/.buildx-cache-new

            # Temp fix
            # https://github.com/docker/build-push-action/issues/252
            # https://github.com/moby/buildkit/issues/1896
            -   name: Move Docker layers cache
                run: |
                    rm -rf /tmp/.buildx-cache
                    mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    verify:
        runs-on: ubuntu-latest
        name: Verify
        needs: build
        if: needs.build.outputs.push == 'true'
        strategy:
            fail-fast: false
            matrix:
                flavour: [debian, alpine]
                php: ['7.4', '8.0', '8.1']
        steps:
            -   name: Test if pushed
                run: |
                    echo "::group::Tests"
                    docker run --rm $BUILD_TAG php /tools/toolbox test
                    echo "::endgroup::"
                env:
                    BUILD_TAG: jakzal/phpqa:php${{ matrix.php }}-${{ matrix.flavour }}
